# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - binary: jwkgen
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm
      - arm64
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.buildDate={{.Date}}
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64

changelog:
  sort: asc
  filters:
    exclude:
      - Merge pull request
      - Merge branch

checksum:
  name_template: '{{ .ProjectName }}-{{ .Version }}-checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

gomod:
  # Proxy a module from proxy.golang.org, making the builds verifiable.
  # This will only be effective if running against a tag. Snapshots will ignore
  # this setting.
  # Notice: for this to work your `build.main` must be a package, not a `.go` file.
  proxy: true
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org

archives:
  - name_template: '{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    format_overrides:
      - goos: windows
        format: zip

brews:
  - name: homebrew-tap
    # Reporitory to push the tap to.
    repository:
      owner: rakutentech
      name: homebrew-tap
      branch: master

    # Git author used to commit to the repository.
    commit_author:
      name: boazy
      email: boazyan@gmail.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    directory: Formula

    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/rakutentech/jwkgen"

    # Your app's description.
    # Default is empty.
    description: |
      Small command-line tool that generates both symmetric and asymmetric JSON
      Web Keys for multiple types of algorithms and elliptic curves.

    license: MIT

scoops:
    # Repository to push the app manifest to.
  - repository:
      owner: rakutentech
      name: scoop-bucket

    # Git author used to commit to the repository.
    commit_author:
      name: boazy
      email: boazyan@gmail.com

    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/rakutentech/jwkgen"

    # Your app's description.
    # Default is empty.
    description: |
      Small command-line tool that generates both symmetric and asymmetric JSON
      Web Keys for multiple types of algorithms and elliptic curves.

    license: MIT

    # The lines beneath this are called `modelines`. See `:help modeline`
    # Feel free to remove those if you don't want/use them.
    # yaml-language-server: $schema=https://raw.githubusercontent.com/goreleaser/goreleaser/v2.1.0/www/docs/static/schema.json
    # vim: set ts=2 sw=2 tw=0 fo=cnqoj
